{
    "flask_app/app.py": "\nimport os\nfrom flask import Flask, render_template, redirect, url_for, request, flash\nfrom flask_login import LoginManager, login_required, logout_user, login_user, current_user\nfrom auth import authenticate_user, register_user\nfrom flask_migrate import Migrate\nfrom models import db, User, init_db\nfrom config import Config\nfrom flask import jsonify\nfrom data_loader.data_loader import load_parquet\nfrom data_loader.data_processor import process_stock_data\n\n# ================== 配置区域 ==================\n# Define the base path of the app\nbase_path = os.path.abspath(os.path.dirname(__file__))\n\n# Folder paths\nTEMPLATES_FOLDER = os.path.join(base_path, 'templates')\nSTATIC_FOLDER = os.path.join(base_path, 'static')\nprint('TEMPLATES_FOLDER:', TEMPLATES_FOLDER)\nprint('STATIC_FOLDER:', STATIC_FOLDER)\n\n# ================== 初始化区域 ==================\n# Initialize Flask app with template and static folder paths\napp = Flask(__name__, template_folder=TEMPLATES_FOLDER, static_folder=STATIC_FOLDER)\napp.config.from_object(Config)\n\n\n# Initialize database\ndb.init_app(app)\n\n# Initialize Flask-Migrate\nmigrate = Migrate(app, db)\n\n# Load Parquet file at app startup\nparquet_file_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'data', 'merged_data.parquet'))\ndf = load_parquet(parquet_file_path)\n\n# Initialize LoginManager\nlogin_manager = LoginManager()\nlogin_manager.init_app(app)\nlogin_manager.login_view = 'login'\n\n# User loader callback\n@login_manager.user_loader\ndef load_user(user_id):\n    return User.query.get(int(user_id))\n\n@app.before_first_request\ndef create_tables():\n    init_db(app)\n\n# Root route\n@app.route('/')\ndef home():\n    return render_template('index.html')  \n\n# Register page route\n@app.route('/register', methods=['GET', 'POST'])\ndef register():\n    if request.method == 'POST':\n        username = request.form['username']\n        email = request.form['email']\n        password = request.form['password']\n        password2 = request.form['password2']\n\n        # Check if passwords match\n        if password != password2:\n            flash('Passwords do not match', 'danger')\n            return redirect(url_for('register'))\n\n        # Register the user\n        if register_user(username, email, password):\n            flash('Account created successfully! You can now login.', 'success')\n            return redirect(url_for('login'))\n        else:\n            flash('User already exists.', 'danger')\n            return redirect(url_for('register'))\n\n    return render_template('register.html')\n\n# Login page route\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        username = request.form['username']\n        password = request.form['password']\n        remember = 'remember' in request.form  # True if checkbox is checked\n        user = authenticate_user(username, password)\n        if user:\n            login_user(user, remember=remember)  # Pass 'remember' to login_user\n            return redirect(url_for('dashboard'))\n        else:\n            flash('Invalid username or password', 'danger')  # Flash error message\n    return render_template('login.html')\n\n# Logout route\n@app.route('/logout')\n@login_required\ndef logout():\n    logout_user()\n    return redirect(url_for('login'))\n\n# Protected page (only accessible by logged-in users)\n@app.route('/dashboard')\n@login_required\ndef dashboard():\n    return render_template('dashboard.html', username=current_user.username)\n\n# Add a new route for the stock page\n@app.route('/stock')\n@login_required\ndef stock():\n    return render_template('stock.html', username=current_user.username)\n\n@app.route('/stock_data')\n@login_required\ndef stock_data():\n    ts_code = request.args.get('ts_code')\n    if not ts_code:\n        return jsonify({'error': 'Missing ts_code parameter'}), 400\n\n    stock_data = df[df['ts_code'] == ts_code]\n    if stock_data.empty:\n        return jsonify({'error': 'No data found for this ts_code'}), 404\n\n    chart_data = process_stock_data(stock_data)\n    return jsonify(chart_data)\n\nif __name__ == '__main__':\n    app.run(debug=True)\n",
    "flask_app/app_files.json": "[\n    \"flask_app/app.py\",\n    \"flask_app/app_files.json\",\n    \"flask_app/auth.py\",\n    \"flask_app/config.py\",\n    \"flask_app/models.py\",\n    \"flask_app/requirements.txt\",\n    \"flask_app/static/style.css\",\n    \"flask_app/templates/dashboard.html\",\n    \"flask_app/templates/index.html\",\n    \"flask_app/templates/login.html\"\n]",
    "flask_app/auth.py": "from flask_login import login_user\nfrom werkzeug.security import check_password_hash, generate_password_hash\nfrom flask import flash\nfrom models import User, db\n\n# Authentication logic\ndef authenticate_user(username, password):\n    user = User.query.filter_by(username=username).first()\n    if user and user.check_password(password):\n        return user  # Return the user object\n    return None  # Return None if authentication fails\n\n# Registration logic\ndef register_user(username, email, password):\n    # Check if the user already exists\n    if User.query.filter_by(username=username).first() or User.query.filter_by(email=email).first():\n        return False  # User already exists\n\n    # Create a new user\n    user = User(username=username, email=email)\n    user.set_password(password)  # Set the password using hash\n    db.session.add(user)\n    db.session.commit()  # Save the new user in the database\n    return True\n",
    "flask_app/config.py": "import os\nfrom datetime import timedelta\n\nclass Config:\n    SECRET_KEY = os.urandom(24)  # Used for encrypting sessions and tokens\n    SQLALCHEMY_DATABASE_URI = 'sqlite:///site.db'  # SQLite database path\n    SQLALCHEMY_TRACK_MODIFICATIONS = False  # Disable SQLAlchemy's object modification tracking\n    SESSION_COOKIE_NAME = 'flask_session_cookie'  # Custom cookie name\n    REMEMBER_COOKIE_DURATION = timedelta(days=30)",
    "flask_app/models.py": "\nfrom flask_sqlalchemy import SQLAlchemy\nfrom werkzeug.security import generate_password_hash, check_password_hash\nfrom flask_login import UserMixin\n\n# Initialize the SQLAlchemy instance\ndb = SQLAlchemy()\n\n# User model\nclass User(UserMixin, db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(120), unique=True, nullable=False)\n    email = db.Column(db.String(120), unique=True, nullable=False)\n    password_hash = db.Column(db.String(128), nullable=False)\n\n    def __repr__(self):\n        return f\"User('{self.username}', '{self.email}')\"\n\n    # Set password (hash the password)\n    def set_password(self, password):\n        self.password_hash = generate_password_hash(password)\n\n    # Check password (validate if the entered password is correct)\n    def check_password(self, password):\n        return check_password_hash(self.password_hash, password)\n\n# Initialize database (create tables)\ndef init_db(app):\n    with app.app_context():\n        db.create_all()  # This creates the tables in the database\n",
    "flask_app/requirements.txt": "\nFlask==2.0.3\nFlask-Login==0.5.0\nFlask-SQLAlchemy==2.5.1\nFlask-Migrate==3.1.0\nWerkzeug==2.0.3\n",
    "flask_app/data_loader/data_loader.py": "import os\nimport pandas as pd\n\ndef load_parquet(file_path):\n    \"\"\"\n    Load a Parquet file into a Pandas DataFrame.\n    :param file_path: Path to the Parquet file.\n    :return: Pandas DataFrame\n    \"\"\"\n    try:\n        df = pd.read_parquet(file_path)\n        print(f\"Loaded Parquet file from {file_path}\")\n        return df\n    except Exception as e:\n        print(f\"Failed to load Parquet file: {e}\")\n        return None",
    "flask_app/data_loader/data_processor.py": "def process_stock_data(df):\n    x_data = df['date'].tolist()\n\n    # Convert numerical columns to float\n    df.loc[:, ['open', 'close', 'low', 'high']] = df[['open', 'close', 'low', 'high']].astype(float)\n    candle_data = df[['open', 'close', 'low', 'high']].values.tolist()\n\n    close_prices = df['close'].astype(float).tolist()\n\n    # Calculate Moving Averages (replace -1 with None for ECharts compatibility)\n    ma5 = calculate_ma(5, close_prices)\n    ma5 = replace_invalid(ma5)\n    ma10 = calculate_ma(10, close_prices)\n    ma10 = replace_invalid(ma10)\n    ma20 = calculate_ma(20, close_prices)\n    ma20 = replace_invalid(ma20)\n\n    return {\n        \"x_data\": x_data,\n        \"candle_data\": candle_data,\n        \"close_prices\": close_prices,\n        \"ma5\": ma5,\n        \"ma10\": ma10,\n        \"ma20\": ma20\n    }\n\ndef replace_invalid(arr):\n    return [x if x != -1 else None for x in arr]\n\ndef calculate_ma(period, data):\n    if period == 0 or not data:\n        return []\n    sum_value = 0\n    ma = []\n    for i in range(len(data)):\n        sum_value += data[i]\n        if i >= period:\n            sum_value -= data[i - period]\n        if i >= period - 1:\n            ma.append(sum_value / period)\n        else:\n            ma.append(-1)\n    return ma",
    "flask_app/data_loader/__init__.py": "",
    "flask_app/static/css/dashboard.css": ".btn {\n    display: inline-block;\n    padding: 10px 20px;\n    margin: 10px;\n    border: none;\n    border-radius: 5px;\n    text-align: center;\n    cursor: pointer;\n    transition: opacity 0.3s ease;\n}\n\n.btn-primary {\n    background-color: #007bff;\n    color: #ffffff;\n}\n\n.btn-secondary {\n    background-color: #6c757d;\n    color: #ffffff;\n}\n\n.btn:hover {\n    opacity: 0.8;\n}",
    "flask_app/static/css/global.css": "/* 基本样式重置 */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Arial', sans-serif;\n}\n\nbody {\n    background: linear-gradient(135deg, #000000, #434343);\n    color: #ffffff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n}\n\n/* 容器样式 */\n.container {\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 15px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n    padding: 30px;\n    width: 100%;\n    max-width: none;\n    min-width: 300px;\n    text-align: center;\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    backdrop-filter: blur(10px);\n}\n\n/* 标题样式 */\nh1, h2 {\n    font-weight: bold;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    margin-bottom: 20px;\n}\n\n/* 输入框样式 */\n.input-group {\n    margin-bottom: 15px;\n    text-align: left;\n}\n\n.input-group label {\n    display: block;\n    margin-bottom: 5px;\n    font-size: 14px;\n    color: #ffffff;\n}\n\n.input-group input, .input-group select {\n    width: 100%;\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    background: rgba(255, 255, 255, 0.2);\n    color: #ffffff;\n    font-size: 16px;\n    outline: none;\n}\n\n.input-group input:focus, .input-group select:focus {\n    background: rgba(255, 255, 255, 0.3);\n}\n\n/* 按钮样式 */\n.btn {\n    width: 100%;\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    background: #007bff;\n    color: #ffffff;\n    font-size: 16px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n}\n\n.btn:hover {\n    background: #0056b3;\n}\n\n/* 链接样式 */\n.link {\n    font-size: 14px;\n    margin-top: 15px;\n}\n\n.link a {\n    color: #007bff;\n    text-decoration: none;\n    transition: color 0.3s ease;\n}\n\n.link a:hover {\n    color: #0056b3;\n}\n\n/* 闪现消息样式 */\n.flash-message {\n    margin-top: 10px;\n    font-size: 14px;\n    color: red;\n}\n\n.interaction-panel {\n    margin-top: 20px;\n    text-align: center;\n}\n\n.btn-sm {\n    width: auto;\n    padding: 5px 10px;\n    margin: 5px;\n}\n\n.chart-container {\n    /* width: 100%; */\n    height: 400px;\n    margin-top: 20px;\n}\n",
    "flask_app/static/css/index.css": "/* 基本样式重置 */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Arial', sans-serif;\n}\n\nbody {\n    background: linear-gradient(135deg, #000000, #434343);\n    color: #ffffff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n}\n\n.home-container {\n    text-align: center;\n    max-width: 600px;\n    margin: auto;\n    padding: 20px;\n    border-radius: 15px;\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    backdrop-filter: blur(10px);\n}\n\n.home-container h1 {\n    font-size: 36px;\n    font-weight: bold;\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n}\n\n.login-link {\n    display: inline-block;\n    padding: 10px 20px;\n    border: 2px solid #007bff;\n    border-radius: 5px;\n    color: #ffffff;\n    text-decoration: none;\n    font-size: 18px;\n    transition: background-color 0.3s ease, color 0.3s ease;\n}\n\n.login-link:hover {\n    background-color: #007bff;\n    color: #ffffff;\n}",
    "flask_app/static/css/login.css": "/* 基本样式重置 */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Arial', sans-serif;\n}\n\nbody {\n    background: linear-gradient(135deg, #000000, #434343);\n    color: #ffffff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n}\n\n.login-container {\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 15px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n    padding: 30px;\n    width: 350px;\n    text-align: center;\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    backdrop-filter: blur(10px);\n}\n\n.login-container h2 {\n    margin-bottom: 20px;\n    font-size: 24px;\n    font-weight: bold;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n}\n\n.input-group {\n    margin-bottom: 15px;\n    text-align: left;\n}\n\n.input-group label {\n    display: block;\n    margin-bottom: 5px;\n    font-size: 14px;\n    color: #ffffff;\n}\n\n.input-group input {\n    width: 100%;\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    background: rgba(255, 255, 255, 0.2);\n    color: #ffffff;\n    font-size: 16px;\n    outline: none;\n}\n\n.input-group input:focus {\n    background: rgba(255, 255, 255, 0.3);\n}\n\n.remember-group {\n    text-align: left;\n    margin-bottom: 15px;\n}\n\n.remember-group label {\n    font-size: 14px;\n    color: #ffffff;\n}\n\n.remember-group input {\n    margin-right: 5px;\n}\n\n.login-btn {\n    width: 100%;\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    background: #007bff;\n    color: #ffffff;\n    font-size: 16px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n}\n\n.login-btn:hover {\n    background: #0056b3;\n}\n\n.register-link {\n    font-size: 14px;\n    margin-top: 15px;\n}\n\n.register-link a {\n    color: #007bff;\n    text-decoration: none;\n    transition: color 0.3s ease;\n}\n\n.register-link a:hover {\n    color: #0056b3;\n}\n\n.flash-message {\n    margin-top: 10px;\n    font-size: 14px;\n}",
    "flask_app/static/css/register.css": "/* 基本样式重置 */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Arial', sans-serif;\n}\n\nbody {\n    background: linear-gradient(135deg, #000000, #434343);\n    color: #ffffff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n}\n\n.register-container {\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 15px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n    padding: 30px;\n    width: 400px;\n    text-align: center;\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    backdrop-filter: blur(10px);\n}\n\n.register-container h2 {\n    font-size: 24px;\n    font-weight: bold;\n    margin-bottom: 20px;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n}\n\n.input-group {\n    margin-bottom: 15px;\n    text-align: left;\n}\n\n.input-group label {\n    display: block;\n    margin-bottom: 5px;\n    font-size: 14px;\n    color: #ffffff;\n}\n\n.input-group input {\n    width: 100%;\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    background: rgba(255, 255, 255, 0.2);\n    color: #ffffff;\n    font-size: 16px;\n    outline: none;\n}\n\n.input-group input:focus {\n    background: rgba(255, 255, 255, 0.3);\n}\n\n.register-btn {\n    width: 100%;\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    background: #007bff;\n    color: #ffffff;\n    font-size: 16px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n}\n\n.register-btn:hover {\n    background: #0056b3;\n}\n\n.login-link {\n    font-size: 14px;\n    margin-top: 15px;\n}\n\n.login-link a {\n    color: #007bff;\n    text-decoration: none;\n    transition: color 0.3s ease;\n}\n\n.login-link a:hover {\n    color: #0056b3;\n}\n\n.flash-message {\n    margin-top: 10px;\n    font-size: 14px;\n}",
    "flask_app/static/js/chart_utils.js": "let chart = null;\n\nfunction searchStock() {\n    var tsCode = $('#stockInput').val();\n    if (!tsCode) {\n        alert('Please enter a ts_code');\n        return;\n    }\n\n    if (chart) {\n        chart.dispose();\n    }\n\n    $.ajax({\n        url: '/stock_data',\n        method: 'GET',\n        data: { ts_code: tsCode },\n        dataType: 'json',\n        success: function(data) {\n            if (data.error) {\n                alert(data.error);\n                return;\n            }\n\n            buildChart(data);\n        },\n        error: function(xhr, status, error) {\n            alert('Error retrieving stock data');\n        }\n    });\n}\n\nfunction buildChart(data) {\n    chart = echarts.init(document.getElementById('stockChart'));\n\n    const options = {\n        title: {\n            text: 'Stock Candlestick Chart'\n        },\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                type: 'cross',\n                snap: true,\n                crossStyle: {\n                    color: '#ffffff'\n                }\n            },\n            formatter: function (params) {\n                if (!params || params.length === 0) return '';\n                return params[0].name + '<br>' +\n                    params.map(function (param) {\n                        return param.seriesName + ': ' + Math.round(param.value * 100) / 100;\n                    }).join('<br>');\n            }\n        },\n        legend: {\n            data: ['Candlestick', 'MA5', 'MA10', 'MA20']\n        },\n        grid: {\n            left: '8%',\n            right: '8%',\n            bottom: '10%'\n        },\n        xAxis: [{\n            type: 'category',\n            data: data.x_data,\n            scale: true,\n            boundaryGap: false,\n            axisLine: { onZero: false }\n        }],\n        yAxis: [{\n            scale: true,\n            splitArea: { show: true }\n        }],\n        dataZoom: [{\n            type: 'slider',\n            show: true,\n            xAxisIndex: [0],\n            filterMode: 'filter',\n            height: 20,\n            bottom: '10%',\n            handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9zM13.8,24.4H6.2V23h7.6V24.4zM13.8,19.6H6.2v-1.4h7.6V19.6z',\n            handleSize: '120%',\n            handleStyle: { color: '#d3dee5' },\n            backgroundStyle: { color: '#f8fcff' },\n            dataBackground: { lineStyle: { color: '#5793f3' }, areaStyle: { color: '#e3f6ff' } }\n        }, {\n            type: 'inside',\n            xAxisIndex: [0]\n        }],\n        series: [{\n            name: 'Candlestick',\n            type: 'candlestick',\n            data: data.candle_data,\n            itemStyle: {\n                color: '#ec0000',\n                color0: '#00da3c',\n                borderColor: '#ec0000',\n                borderColor0: '#00da3c'\n            }\n        }]\n    };\n\n    // Calculate MA Lines\n    const maSeries = [{\n        name: 'MA5',\n        type: 'line',\n        data: data.ma5,\n        smooth: true,\n        lineStyle: { width: 1 },\n        itemStyle: { color: '#ff4500' }\n    }, {\n        name: 'MA10',\n        type: 'line',\n        data: data.ma10,\n        smooth: true,\n        lineStyle: { width: 1 },\n        itemStyle: { color: '#06a7a0' }\n    }, {\n        name: 'MA20',\n        type: 'line',\n        data: data.ma20,\n        smooth: true,\n        lineStyle: { width: 1 },\n        itemStyle: { color: '#3c763d' }\n    }];\n\n    // Add MA lines to series\n    options.series.push(...maSeries);\n\n    // Add MarkPoints\n    options.series[0].markPoint = {\n        label: {\n            formatter: (param) => Math.round(param.value) || 0,\n            color: '#000000'\n        },\n        data: [{\n            name: '最高',\n            type: 'max',\n            valueDim: 'highest'\n        },{\n            name: '最低',\n            type: 'min',\n            valueDim: 'lowest'\n        }]\n    };\n\n    chart.setOption(options);\n}\n\nfunction zoomIn() {\n    chart.dispatchAction({\n        type: 'dataZoom',\n        start: 30,\n        end: 70\n    });\n}\n\nfunction zoomOut() {\n    chart.dispatchAction({\n        type: 'dataZoom',\n        start: 0,\n        end: 100\n    });\n}\n\nfunction resetChart() {\n    chart.dispatchAction({ type: 'restore' });\n}",
    "flask_app/templates/dashboard.html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Dashboard</title>\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='css/global.css') }}\">\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='css/dashboard.css') }}\">\n</head>\n<body>\n    <div class=\"container\">\n        <h2>Welcome, {{ username }}!</h2>\n        <p>This is your protected dashboard.</p>\n        <a href=\"{{ url_for('stock') }}\" class=\"btn btn-primary\">Analyze Stocks</a>\n        <a href=\"{{ url_for('logout') }}\" class=\"btn btn-secondary\">Logout</a>\n    </div>\n</body>\n</html>",
    "flask_app/templates/index.html": "<!-- \n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home Page</title>\n</head>\n<body>\n    <h1>Welcome to the Stock Monitor App!</h1>\n    <a href=\"{{ url_for('login') }}\">Login</a>\n</body>\n</html> -->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Home Page</title>\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='css/global.css') }}\">\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/index.css') }}\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n</head>\n<body>\n    <div class=\"home-container\">\n        <h1>Welcome to the Stock Monitor App!</h1>\n        <a href=\"{{ url_for('login') }}\" class=\"login-link\">Login</a>\n    </div>\n</body>\n</html>",
    "flask_app/templates/login.html": "<!-- <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Login</title>\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='style.css') }}\">\n</head>\n<body>\n    <div class=\"login-container\">\n        <h2>Login</h2>\n        <form method=\"POST\">\n            <div class=\"input-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Enter your username\" required>\n            </div>\n            <div class=\"input-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n            </div>\n            <div class=\"remember-group\">\n                <label>\n                    <input type=\"checkbox\" name=\"remember\" id=\"remember\"> \n                    Remember Me\n                </label>\n            </div>\n            <button type=\"submit\" class=\"login-btn\">Login</button>\n        </form>\n        <p class=\"register-link\">Don't have an account? <a href=\"{{ url_for('register') }}\">Register here</a></p>\n        <p class=\"flash-message\" style=\"color:red\">{{ get_flashed_messages() }}</p>\n    </div>\n</body>\n</html> -->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Login</title>\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='css/global.css') }}\">\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/login.css') }}\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n</head>\n<body>\n    <div class=\"login-container\">\n        <h2>Login</h2>\n        <form method=\"POST\">\n            <div class=\"input-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Enter your username\" required>\n            </div>\n            <div class=\"input-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n            </div>\n            <div class=\"remember-group\">\n                <label>\n                    <input type=\"checkbox\" name=\"remember\" id=\"remember\"> \n                    Remember Me\n                </label>\n            </div>\n            <button type=\"submit\" class=\"login-btn\">Login</button>\n        </form>\n        <p class=\"register-link\">Don't have an account? <a href=\"{{ url_for('register') }}\">Register here</a></p>\n        <p class=\"flash-message\" style=\"color:red\">{{ get_flashed_messages() }}</p>\n    </div>\n</body>\n</html>",
    "flask_app/templates/register.html": "<!-- <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Register</title>\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/style.css') }}\">\n</head>\n<body>\n    <h2>Create an Account</h2>\n    <form method=\"POST\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Enter your username\" required><br><br>\n\n        <label for=\"email\">Email</label>\n        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" required><br><br>\n\n        <label for=\"password\">Password</label>\n        <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" required><br><br>\n\n        <label for=\"password2\">Confirm Password</label>\n        <input type=\"password\" id=\"password2\" name=\"password2\" placeholder=\"Confirm your password\" required><br><br>\n\n        <button type=\"submit\">Register</button>\n    </form>\n    <p style=\"color:red\">{{ get_flashed_messages() }}</p>\n</body>\n</html> -->\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Register</title>\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='css/global.css') }}\">\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/register.css') }}\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n</head>\n<body>\n    <div class=\"register-container\">\n        <h2>Create an Account</h2>\n        <form method=\"POST\">\n            <div class=\"input-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Enter your username\" required>\n            </div>\n            <div class=\"input-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\n            </div>\n            <div class=\"input-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\n            </div>\n            <div class=\"input-group\">\n                <label for=\"password2\">Confirm Password</label>\n                <input type=\"password\" id=\"password2\" name=\"password2\" placeholder=\"Confirm your password\" required>\n            </div>\n            <button type=\"submit\" class=\"register-btn\">Register</button>\n        </form>\n        <p class=\"login-link\">Already have an account? <a href=\"{{ url_for('login') }}\">Login here</a></p>\n        <p class=\"flash-message\" style=\"color:red\">{{ get_flashed_messages() }}</p>\n    </div>\n</body>\n</html>",
    "flask_app/templates/stock.html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Stock Analytics</title>\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='css/global.css') }}\">\n    <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='css/index.css') }}\">\n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js\"></script>\n    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n    <script src=\"{{ url_for('static', filename='js/chart_utils.js') }}\"></script>\n</head>\n<body>\n    <div class=\"container\">\n        <h2>Stock Analyzer</h2>\n        <div class=\"input-group\">\n            <label for=\"stockInput\">Stock Code</label>\n            <input type=\"text\" id=\"stockInput\" name=\"stockInput\" placeholder=\"Enter ts_code\" class=\"form-control\">\n            <button onclick=\"searchStock()\" class=\"btn\">Search</button>\n        </div>\n        <div id=\"stockChart\" class=\"chart-container\"></div>\n        <div class=\"interaction-panel\">\n            <button onclick=\"zoomIn()\" class=\"btn btn-sm\">Zoom In</button>\n            <button onclick=\"zoomOut()\" class=\"btn btn-sm\">Zoom Out</button>\n            <button onclick=\"resetChart()\" class=\"btn btn-sm\">Reset View</button>\n        </div>\n    </div>\n</body>\n</html>"
}